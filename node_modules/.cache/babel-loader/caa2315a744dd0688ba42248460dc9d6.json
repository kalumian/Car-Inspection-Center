{"ast":null,"code":"var _jsxFileName = \"/home/alwaleed/ProjectCar/Car-Inspection-Center/frontend/src/Components/Childe/Steps-Components/Timer/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer({\n  initialMinute = 30,\n  initialSeconds = 0,\n  start,\n  handleTime\n}) {\n  _s();\n\n  const [minutes, setMinutes] = useState(initialMinute);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [timeState, setTimeState] = useState(true);\n  useEffect(() => {\n    if (start === \"finish\") {\n      handleTime({\n        time: (minutes * 60 + seconds - initialMinute * 60 + initialSeconds) * -1\n      });\n    }\n\n    let myInterval = setInterval(() => {\n      if (start !== \"finish\" && start) {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(myInterval);\n            setTimeState(false);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  }, [seconds, minutes, start]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `${!timeState ? \"text-danger\" : \"text-success\"} ps-2`,\n    children: [minutes, \":\", seconds]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"cu2XCsb7HZFqZDYvyIzoi7z/ldA=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/alwaleed/ProjectCar/Car-Inspection-Center/frontend/src/Components/Childe/Steps-Components/Timer/Timer.jsx"],"names":["useEffect","useState","Timer","initialMinute","initialSeconds","start","handleTime","minutes","setMinutes","seconds","setSeconds","timeState","setTimeState","time","myInterval","setInterval","clearInterval"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,aAAa,GAAG,EAAlB;AAAsBC,EAAAA,cAAc,GAAG,CAAvC;AAA0CC,EAAAA,KAA1C;AAAiDC,EAAAA;AAAjD,CAAf,EAA8E;AAAA;;AAC5E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACE,aAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACG,cAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,KAAK,QAAd,EAAwB;AACtBC,MAAAA,UAAU,CAAC;AACTO,QAAAA,IAAI,EACF,CAACN,OAAO,GAAG,EAAV,GAAeE,OAAf,GAAyBN,aAAa,GAAG,EAAzC,GAA8CC,cAA/C,IAAiE,CAAC;AAF3D,OAAD,CAAV;AAID;;AACD,QAAIU,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAIV,KAAK,KAAK,QAAV,IAAsBA,KAA1B,EAAiC;AAC/B,YAAII,OAAO,GAAG,CAAd,EAAiB;AACfC,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AACD,YAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,cAAIF,OAAO,KAAK,CAAhB,EAAmB;AACjBS,YAAAA,aAAa,CAACF,UAAD,CAAb;AACAF,YAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,WAHD,MAGO;AACLJ,YAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAG,YAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF;AACF;AACF,KAf2B,EAezB,IAfyB,CAA5B;AAgBA,WAAO,MAAM;AACXM,MAAAA,aAAa,CAACF,UAAD,CAAb;AACD,KAFD;AAGD,GA1BQ,EA0BN,CAACL,OAAD,EAAUF,OAAV,EAAmBF,KAAnB,CA1BM,CAAT;AA2BA,sBACE;AAAM,IAAA,SAAS,EAAG,GAAE,CAACM,SAAD,GAAa,aAAb,GAA6B,cAAe,OAAhE;AAAA,eACGJ,OADH,OACaE,OADb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApCQP,K;;KAAAA,K;AAsCT,eAAeA,KAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\n\nfunction Timer({ initialMinute = 30, initialSeconds = 0, start, handleTime }) {\n  const [minutes, setMinutes] = useState(initialMinute);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [timeState, setTimeState] = useState(true);\n  useEffect(() => {\n    if (start === \"finish\") {\n      handleTime({\n        time:\n          (minutes * 60 + seconds - initialMinute * 60 + initialSeconds) * -1,\n      });\n    }\n    let myInterval = setInterval(() => {\n      if (start !== \"finish\" && start) {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(myInterval);\n            setTimeState(false);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  }, [seconds, minutes, start]);\n  return (\n    <span className={`${!timeState ? \"text-danger\" : \"text-success\"} ps-2`}>\n      {minutes}:{seconds}\n    </span>\n  );\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}